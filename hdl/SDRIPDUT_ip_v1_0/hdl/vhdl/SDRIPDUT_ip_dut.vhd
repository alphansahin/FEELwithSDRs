-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\SDRIP\SDRIPDUT_ip_dut.vhd
-- Created: 2022-06-06 21:53:52
-- 
-- Generated by MATLAB 9.12 and HDL Coder 3.20
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: SDRIPDUT_ip_dut
-- Source Path: SDRIPDUT_ip/SDRIPDUT_ip_dut
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY SDRIPDUT_ip_dut IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        dut_enable                        :   IN    std_logic;  -- ufix1
        inphase_in                        :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16
        quadrature_in                     :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16
        valid_in                          :   IN    std_logic;  -- ufix1
        timerRX                           :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        timerPC                           :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        timerTX                           :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        configuration_rsvd                :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
        ce_out                            :   OUT   std_logic;  -- ufix1
        enableTX                          :   OUT   std_logic;  -- ufix1
        enableRX                          :   OUT   std_logic;  -- ufix1
        chooseTXpath                      :   OUT   std_logic;  -- ufix1
        stateTimer                        :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
        cntDetectionAsMode1               :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        cntDetectionAsMode2               :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        timerRXCurrent                    :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        timerPCCurrent                    :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        timerTXCurrent                    :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        configurationCurrent              :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
        cntDetectionSingle                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        IQdataSample                      :   OUT   std_logic_vector(31 DOWNTO 0)  -- ufix32
        );
END SDRIPDUT_ip_dut;


ARCHITECTURE rtl OF SDRIPDUT_ip_dut IS

  -- Component Declarations
  COMPONENT SDRIPDUT_ip_src_SDR_IP_DUT
    PORT( clk                             :   IN    std_logic;
          clk_enable                      :   IN    std_logic;
          reset                           :   IN    std_logic;
          inphase_in                      :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16
          quadrature_in                   :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16
          valid_in                        :   IN    std_logic;  -- ufix1
          timerRX                         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          timerPC                         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          timerTX                         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          configuration_rsvd              :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          ce_out                          :   OUT   std_logic;  -- ufix1
          enableTX                        :   OUT   std_logic;  -- ufix1
          enableRX                        :   OUT   std_logic;  -- ufix1
          chooseTXpath                    :   OUT   std_logic;  -- ufix1
          stateTimer                      :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
          cntDetectionAsMode1             :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          cntDetectionAsMode2             :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          timerRXCurrent                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          timerPCCurrent                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          timerTXCurrent                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          configurationCurrent            :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
          cntDetectionSingle              :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          IQdataSample                    :   OUT   std_logic_vector(31 DOWNTO 0)  -- ufix32
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : SDRIPDUT_ip_src_SDR_IP_DUT
    USE ENTITY work.SDRIPDUT_ip_src_SDR_IP_DUT(rtl);

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL valid_in_sig                     : std_logic;  -- ufix1
  SIGNAL ce_out_sig                       : std_logic;  -- ufix1
  SIGNAL enableTX_sig                     : std_logic;  -- ufix1
  SIGNAL enableRX_sig                     : std_logic;  -- ufix1
  SIGNAL chooseTXpath_sig                 : std_logic;  -- ufix1
  SIGNAL stateTimer_sig                   : std_logic_vector(1 DOWNTO 0);  -- ufix2
  SIGNAL cntDetectionAsMode1_sig          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL cntDetectionAsMode2_sig          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL timerRXCurrent_sig               : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL timerPCCurrent_sig               : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL timerTXCurrent_sig               : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL configurationCurrent_sig         : std_logic_vector(1 DOWNTO 0);  -- ufix2
  SIGNAL cntDetectionSingle_sig           : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL IQdataSample_sig                 : std_logic_vector(31 DOWNTO 0);  -- ufix32

BEGIN
  u_SDRIPDUT_ip_src_SDR_IP_DUT : SDRIPDUT_ip_src_SDR_IP_DUT
    PORT MAP( clk => clk,
              clk_enable => enb,
              reset => reset,
              inphase_in => inphase_in,  -- sfix16
              quadrature_in => quadrature_in,  -- sfix16
              valid_in => valid_in_sig,  -- ufix1
              timerRX => timerRX,  -- ufix32
              timerPC => timerPC,  -- ufix32
              timerTX => timerTX,  -- ufix32
              configuration_rsvd => configuration_rsvd,  -- ufix2
              ce_out => ce_out_sig,  -- ufix1
              enableTX => enableTX_sig,  -- ufix1
              enableRX => enableRX_sig,  -- ufix1
              chooseTXpath => chooseTXpath_sig,  -- ufix1
              stateTimer => stateTimer_sig,  -- ufix2
              cntDetectionAsMode1 => cntDetectionAsMode1_sig,  -- ufix32
              cntDetectionAsMode2 => cntDetectionAsMode2_sig,  -- ufix32
              timerRXCurrent => timerRXCurrent_sig,  -- ufix32
              timerPCCurrent => timerPCCurrent_sig,  -- ufix32
              timerTXCurrent => timerTXCurrent_sig,  -- ufix32
              configurationCurrent => configurationCurrent_sig,  -- ufix2
              cntDetectionSingle => cntDetectionSingle_sig,  -- ufix32
              IQdataSample => IQdataSample_sig  -- ufix32
              );

  valid_in_sig <= valid_in;

  enb <= dut_enable;

  ce_out <= ce_out_sig;

  enableTX <= enableTX_sig;

  enableRX <= enableRX_sig;

  chooseTXpath <= chooseTXpath_sig;

  stateTimer <= stateTimer_sig;

  cntDetectionAsMode1 <= cntDetectionAsMode1_sig;

  cntDetectionAsMode2 <= cntDetectionAsMode2_sig;

  timerRXCurrent <= timerRXCurrent_sig;

  timerPCCurrent <= timerPCCurrent_sig;

  timerTXCurrent <= timerTXCurrent_sig;

  configurationCurrent <= configurationCurrent_sig;

  cntDetectionSingle <= cntDetectionSingle_sig;

  IQdataSample <= IQdataSample_sig;

END rtl;

