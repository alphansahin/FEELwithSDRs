-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\SDRIP\SDRIPDUT_ip.vhd
-- Created: 2022-06-06 21:53:52
-- 
-- Generated by MATLAB 9.12 and HDL Coder 3.20
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: -1
-- Target subsystem base rate: -1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: SDRIPDUT_ip
-- Source Path: SDRIPDUT_ip
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY SDRIPDUT_ip IS
  PORT( IPCORE_CLK                        :   IN    std_logic;  -- ufix1
        IPCORE_RESETN                     :   IN    std_logic;  -- ufix1
        inphase_in                        :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
        quadrature_in                     :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
        valid_in                          :   IN    std_logic;  -- ufix1
        AXI4_Lite_ACLK                    :   IN    std_logic;  -- ufix1
        AXI4_Lite_ARESETN                 :   IN    std_logic;  -- ufix1
        AXI4_Lite_AWADDR                  :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
        AXI4_Lite_AWVALID                 :   IN    std_logic;  -- ufix1
        AXI4_Lite_WDATA                   :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        AXI4_Lite_WSTRB                   :   IN    std_logic_vector(3 DOWNTO 0);  -- ufix4
        AXI4_Lite_WVALID                  :   IN    std_logic;  -- ufix1
        AXI4_Lite_BREADY                  :   IN    std_logic;  -- ufix1
        AXI4_Lite_ARADDR                  :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
        AXI4_Lite_ARVALID                 :   IN    std_logic;  -- ufix1
        AXI4_Lite_RREADY                  :   IN    std_logic;  -- ufix1
        enableTX                          :   OUT   std_logic;  -- ufix1
        enableRX                          :   OUT   std_logic;  -- ufix1
        chooseTXpath                      :   OUT   std_logic;  -- ufix1
        AXI4_Lite_AWREADY                 :   OUT   std_logic;  -- ufix1
        AXI4_Lite_WREADY                  :   OUT   std_logic;  -- ufix1
        AXI4_Lite_BRESP                   :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
        AXI4_Lite_BVALID                  :   OUT   std_logic;  -- ufix1
        AXI4_Lite_ARREADY                 :   OUT   std_logic;  -- ufix1
        AXI4_Lite_RDATA                   :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        AXI4_Lite_RRESP                   :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
        AXI4_Lite_RVALID                  :   OUT   std_logic  -- ufix1
        );
END SDRIPDUT_ip;


ARCHITECTURE rtl OF SDRIPDUT_ip IS

  -- Component Declarations
  COMPONENT SDRIPDUT_ip_reset_sync
    PORT( clk                             :   IN    std_logic;  -- ufix1
          reset_in                        :   IN    std_logic;  -- ufix1
          reset_out                       :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT SDRIPDUT_ip_axi_lite
    PORT( reset                           :   IN    std_logic;
          AXI4_Lite_ACLK                  :   IN    std_logic;  -- ufix1
          AXI4_Lite_ARESETN               :   IN    std_logic;  -- ufix1
          AXI4_Lite_AWADDR                :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
          AXI4_Lite_AWVALID               :   IN    std_logic;  -- ufix1
          AXI4_Lite_WDATA                 :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          AXI4_Lite_WSTRB                 :   IN    std_logic_vector(3 DOWNTO 0);  -- ufix4
          AXI4_Lite_WVALID                :   IN    std_logic;  -- ufix1
          AXI4_Lite_BREADY                :   IN    std_logic;  -- ufix1
          AXI4_Lite_ARADDR                :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
          AXI4_Lite_ARVALID               :   IN    std_logic;  -- ufix1
          AXI4_Lite_RREADY                :   IN    std_logic;  -- ufix1
          read_ip_timestamp               :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          read_stateTimer                 :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          read_cntDetectionAsMode1        :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          read_cntDetectionAsMode2        :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          read_timerRXCurrent             :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          read_timerPCCurrent             :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          read_timerTXCurrent             :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          read_configurationCurrent       :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          read_cntDetectionSingle         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          read_IQdataSample               :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          AXI4_Lite_AWREADY               :   OUT   std_logic;  -- ufix1
          AXI4_Lite_WREADY                :   OUT   std_logic;  -- ufix1
          AXI4_Lite_BRESP                 :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
          AXI4_Lite_BVALID                :   OUT   std_logic;  -- ufix1
          AXI4_Lite_ARREADY               :   OUT   std_logic;  -- ufix1
          AXI4_Lite_RDATA                 :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          AXI4_Lite_RRESP                 :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
          AXI4_Lite_RVALID                :   OUT   std_logic;  -- ufix1
          write_axi_enable                :   OUT   std_logic;  -- ufix1
          write_timerRX                   :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_timerPC                   :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_timerTX                   :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_configuration             :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
          reset_internal                  :   OUT   std_logic  -- ufix1
          );
  END COMPONENT;

  COMPONENT SDRIPDUT_ip_dut
    PORT( clk                             :   IN    std_logic;  -- ufix1
          reset                           :   IN    std_logic;
          dut_enable                      :   IN    std_logic;  -- ufix1
          inphase_in                      :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16
          quadrature_in                   :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16
          valid_in                        :   IN    std_logic;  -- ufix1
          timerRX                         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          timerPC                         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          timerTX                         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          configuration_rsvd              :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          ce_out                          :   OUT   std_logic;  -- ufix1
          enableTX                        :   OUT   std_logic;  -- ufix1
          enableRX                        :   OUT   std_logic;  -- ufix1
          chooseTXpath                    :   OUT   std_logic;  -- ufix1
          stateTimer                      :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
          cntDetectionAsMode1             :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          cntDetectionAsMode2             :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          timerRXCurrent                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          timerPCCurrent                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          timerTXCurrent                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          configurationCurrent            :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
          cntDetectionSingle              :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          IQdataSample                    :   OUT   std_logic_vector(31 DOWNTO 0)  -- ufix32
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : SDRIPDUT_ip_reset_sync
    USE ENTITY work.SDRIPDUT_ip_reset_sync(rtl);

  FOR ALL : SDRIPDUT_ip_axi_lite
    USE ENTITY work.SDRIPDUT_ip_axi_lite(rtl);

  FOR ALL : SDRIPDUT_ip_dut
    USE ENTITY work.SDRIPDUT_ip_dut(rtl);

  -- Signals
  SIGNAL reset                            : std_logic;
  SIGNAL ip_timestamp                     : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL reset_cm                         : std_logic;  -- ufix1
  SIGNAL inphase_in_unsigned              : unsigned(15 DOWNTO 0);  -- ufix16
  SIGNAL inphase_in_sig                   : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL quadrature_in_unsigned           : unsigned(15 DOWNTO 0);  -- ufix16
  SIGNAL quadrature_in_sig                : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL reset_internal                   : std_logic;  -- ufix1
  SIGNAL reset_before_sync                : std_logic;  -- ufix1
  SIGNAL stateTimer_sig                   : std_logic_vector(1 DOWNTO 0);  -- ufix2
  SIGNAL cntDetectionAsMode1_sig          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL cntDetectionAsMode2_sig          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL timerRXCurrent_sig               : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL timerPCCurrent_sig               : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL timerTXCurrent_sig               : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL configurationCurrent_sig         : std_logic_vector(1 DOWNTO 0);  -- ufix2
  SIGNAL cntDetectionSingle_sig           : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL IQdataSample_sig                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL AXI4_Lite_BRESP_tmp              : std_logic_vector(1 DOWNTO 0);  -- ufix2
  SIGNAL AXI4_Lite_RDATA_tmp              : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL AXI4_Lite_RRESP_tmp              : std_logic_vector(1 DOWNTO 0);  -- ufix2
  SIGNAL write_axi_enable                 : std_logic;  -- ufix1
  SIGNAL write_timerRX                    : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_timerPC                    : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_timerTX                    : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_configuration              : std_logic_vector(1 DOWNTO 0);  -- ufix2
  SIGNAL ce_out_sig                       : std_logic;  -- ufix1
  SIGNAL enableTX_sig                     : std_logic;  -- ufix1
  SIGNAL enableRX_sig                     : std_logic;  -- ufix1
  SIGNAL chooseTXpath_sig                 : std_logic;  -- ufix1

BEGIN
  u_SDRIPDUT_ip_reset_sync_inst : SDRIPDUT_ip_reset_sync
    PORT MAP( clk => IPCORE_CLK,  -- ufix1
              reset_in => reset_before_sync,  -- ufix1
              reset_out => reset
              );

  u_SDRIPDUT_ip_axi_lite_inst : SDRIPDUT_ip_axi_lite
    PORT MAP( reset => reset,
              AXI4_Lite_ACLK => AXI4_Lite_ACLK,  -- ufix1
              AXI4_Lite_ARESETN => AXI4_Lite_ARESETN,  -- ufix1
              AXI4_Lite_AWADDR => AXI4_Lite_AWADDR,  -- ufix16
              AXI4_Lite_AWVALID => AXI4_Lite_AWVALID,  -- ufix1
              AXI4_Lite_WDATA => AXI4_Lite_WDATA,  -- ufix32
              AXI4_Lite_WSTRB => AXI4_Lite_WSTRB,  -- ufix4
              AXI4_Lite_WVALID => AXI4_Lite_WVALID,  -- ufix1
              AXI4_Lite_BREADY => AXI4_Lite_BREADY,  -- ufix1
              AXI4_Lite_ARADDR => AXI4_Lite_ARADDR,  -- ufix16
              AXI4_Lite_ARVALID => AXI4_Lite_ARVALID,  -- ufix1
              AXI4_Lite_RREADY => AXI4_Lite_RREADY,  -- ufix1
              read_ip_timestamp => std_logic_vector(ip_timestamp),  -- ufix32
              read_stateTimer => stateTimer_sig,  -- ufix2
              read_cntDetectionAsMode1 => cntDetectionAsMode1_sig,  -- ufix32
              read_cntDetectionAsMode2 => cntDetectionAsMode2_sig,  -- ufix32
              read_timerRXCurrent => timerRXCurrent_sig,  -- ufix32
              read_timerPCCurrent => timerPCCurrent_sig,  -- ufix32
              read_timerTXCurrent => timerTXCurrent_sig,  -- ufix32
              read_configurationCurrent => configurationCurrent_sig,  -- ufix2
              read_cntDetectionSingle => cntDetectionSingle_sig,  -- ufix32
              read_IQdataSample => IQdataSample_sig,  -- ufix32
              AXI4_Lite_AWREADY => AXI4_Lite_AWREADY,  -- ufix1
              AXI4_Lite_WREADY => AXI4_Lite_WREADY,  -- ufix1
              AXI4_Lite_BRESP => AXI4_Lite_BRESP_tmp,  -- ufix2
              AXI4_Lite_BVALID => AXI4_Lite_BVALID,  -- ufix1
              AXI4_Lite_ARREADY => AXI4_Lite_ARREADY,  -- ufix1
              AXI4_Lite_RDATA => AXI4_Lite_RDATA_tmp,  -- ufix32
              AXI4_Lite_RRESP => AXI4_Lite_RRESP_tmp,  -- ufix2
              AXI4_Lite_RVALID => AXI4_Lite_RVALID,  -- ufix1
              write_axi_enable => write_axi_enable,  -- ufix1
              write_timerRX => write_timerRX,  -- ufix32
              write_timerPC => write_timerPC,  -- ufix32
              write_timerTX => write_timerTX,  -- ufix32
              write_configuration => write_configuration,  -- ufix2
              reset_internal => reset_internal  -- ufix1
              );

  u_SDRIPDUT_ip_dut_inst : SDRIPDUT_ip_dut
    PORT MAP( clk => IPCORE_CLK,  -- ufix1
              reset => reset,
              dut_enable => write_axi_enable,  -- ufix1
              inphase_in => std_logic_vector(inphase_in_sig),  -- sfix16
              quadrature_in => std_logic_vector(quadrature_in_sig),  -- sfix16
              valid_in => valid_in,  -- ufix1
              timerRX => write_timerRX,  -- ufix32
              timerPC => write_timerPC,  -- ufix32
              timerTX => write_timerTX,  -- ufix32
              configuration_rsvd => write_configuration,  -- ufix2
              ce_out => ce_out_sig,  -- ufix1
              enableTX => enableTX_sig,  -- ufix1
              enableRX => enableRX_sig,  -- ufix1
              chooseTXpath => chooseTXpath_sig,  -- ufix1
              stateTimer => stateTimer_sig,  -- ufix2
              cntDetectionAsMode1 => cntDetectionAsMode1_sig,  -- ufix32
              cntDetectionAsMode2 => cntDetectionAsMode2_sig,  -- ufix32
              timerRXCurrent => timerRXCurrent_sig,  -- ufix32
              timerPCCurrent => timerPCCurrent_sig,  -- ufix32
              timerTXCurrent => timerTXCurrent_sig,  -- ufix32
              configurationCurrent => configurationCurrent_sig,  -- ufix2
              cntDetectionSingle => cntDetectionSingle_sig,  -- ufix32
              IQdataSample => IQdataSample_sig  -- ufix32
              );

  ip_timestamp <= unsigned'(X"837DD649");

  reset_cm <=  NOT IPCORE_RESETN;

  inphase_in_unsigned <= unsigned(inphase_in);

  inphase_in_sig <= signed(inphase_in_unsigned);

  quadrature_in_unsigned <= unsigned(quadrature_in);

  quadrature_in_sig <= signed(quadrature_in_unsigned);

  reset_before_sync <= reset_cm OR reset_internal;

  enableTX <= enableTX_sig;

  enableRX <= enableRX_sig;

  chooseTXpath <= chooseTXpath_sig;

  AXI4_Lite_BRESP <= AXI4_Lite_BRESP_tmp;

  AXI4_Lite_RDATA <= AXI4_Lite_RDATA_tmp;

  AXI4_Lite_RRESP <= AXI4_Lite_RRESP_tmp;

END rtl;

