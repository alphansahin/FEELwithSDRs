-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\SDRIP\SDRIPDUT_ip_src_slicer.vhd
-- Created: 2022-06-06 21:52:42
-- 
-- Generated by MATLAB 9.12 and HDL Coder 3.20
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: SDRIPDUT_ip_src_slicer
-- Source Path: SDRIP/SDR IP DUT/slicer
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY SDRIPDUT_ip_src_slicer IS
  PORT( inputI                            :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
        inputQ                            :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
        isMode2                           :   IN    std_logic;
        outputI                           :   OUT   std_logic_vector(11 DOWNTO 0);  -- sfix12
        outputQ                           :   OUT   std_logic_vector(11 DOWNTO 0)  -- sfix12
        );
END SDRIPDUT_ip_src_slicer;


ARCHITECTURE rtl OF SDRIPDUT_ip_src_slicer IS

  -- Signals
  SIGNAL inputI_signed                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL inputQ_signed                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL outputI_tmp                      : signed(11 DOWNTO 0);  -- sfix12
  SIGNAL outputQ_tmp                      : signed(11 DOWNTO 0);  -- sfix12

BEGIN
  inputI_signed <= signed(inputI);

  inputQ_signed <= signed(inputQ);

  slicer_output : PROCESS (inputI_signed, inputQ_signed, isMode2)
    VARIABLE inputIc : signed(15 DOWNTO 0);
    VARIABLE inputQc : signed(15 DOWNTO 0);
    VARIABLE outputIc : unsigned(11 DOWNTO 0);
    VARIABLE outputQc : unsigned(11 DOWNTO 0);
  BEGIN
    inputIc := inputI_signed;
    inputQc := inputQ_signed;
    IF ( NOT isMode2) = '1' THEN 
      outputIc := unsigned(inputIc(11 DOWNTO 0));
      outputQc := unsigned(inputQc(11 DOWNTO 0));
    ELSE 
      outputIc := unsigned(inputIc(15 DOWNTO 4));
      outputQc := unsigned(inputQc(15 DOWNTO 4));
    END IF;
    outputI_tmp <= signed(outputIc);
    outputQ_tmp <= signed(outputQc);
  END PROCESS slicer_output;


  outputI <= std_logic_vector(outputI_tmp);

  outputQ <= std_logic_vector(outputQ_tmp);

END rtl;

